{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/shared/config/routes.ts"],"sourcesContent":["// Centralized routes configuration\nexport interface RouteConfig {\n  path: string;\n  title: string;\n  description: string;\n  requiresAuth: boolean;\n}\n\nexport const ROUTES: Record<string, RouteConfig> = {\n  HOME: {\n    path: '/',\n    title: 'Home',\n    description: 'Welcome to Easy Dash',\n    requiresAuth: false,\n  },\n  LOGIN: {\n    path: '/login',\n    title: 'Login',\n    description: 'Sign in to your account',\n    requiresAuth: false,\n  },\n  REGISTER: {\n    path: '/register',\n    title: 'Register',\n    description: 'Create a new account',\n    requiresAuth: false,\n  },\n  DASHBOARD: {\n    path: '/dashboard',\n    title: 'Dashboard',\n    description: 'Your dashboard overview',\n    requiresAuth: true,\n  },\n  PROFILE: {\n    path: '/profile',\n    title: 'Profile',\n    description: 'Your profile settings',\n    requiresAuth: true,\n  },\n  SETTINGS: {\n    path: '/settings',\n    title: 'Settings',\n    description: 'Application settings',\n    requiresAuth: true,\n  },\n} as const;\n\n// API routes\nexport const API_ROUTES = {\n  AUTH: {\n    LOGIN: '/api/auth/login',\n    LOGOUT: '/api/auth/logout',\n    REGISTER: '/api/auth/register',\n    REFRESH: '/api/auth/refresh',\n  },\n  USERS: {\n    PROFILE: '/api/users/profile',\n    SETTINGS: '/api/users/settings',\n  },\n  DASHBOARD: {\n    STATS: '/api/dashboard/stats',\n    CHARTS: '/api/dashboard/charts',\n  },\n} as const;\n\n// Helper functions\nexport const getRouteByPath = (path: string): RouteConfig | undefined => {\n  return Object.values(ROUTES).find((route) => route.path === path);\n};\n\nexport const getPublicRoutes = (): RouteConfig[] => {\n  return Object.values(ROUTES).filter((route) => !route.requiresAuth);\n};\n\nexport const getProtectedRoutes = (): RouteConfig[] => {\n  return Object.values(ROUTES).filter((route) => route.requiresAuth);\n};\n\nexport const getAllRoutes = (): RouteConfig[] => {\n  return Object.values(ROUTES);\n};\n\n// Server-safe route configuration for SSR\nexport const getServerRouteConfig = () => {\n  return {\n    routes: ROUTES,\n    getPublicRoutes: () => getPublicRoutes(),\n    getProtectedRoutes: () => getProtectedRoutes(),\n    getAllRoutes: () => getAllRoutes(),\n    getRouteByPath: (path: string) => getRouteByPath(path),\n  };\n};\n"],"names":[],"mappings":"AAAA,mCAAmC;;;;;;;;;;AAQ5B,MAAM,SAAsC;IACjD,MAAM;QACJ,MAAM;QACN,OAAO;QACP,aAAa;QACb,cAAc;IAChB;IACA,OAAO;QACL,MAAM;QACN,OAAO;QACP,aAAa;QACb,cAAc;IAChB;IACA,UAAU;QACR,MAAM;QACN,OAAO;QACP,aAAa;QACb,cAAc;IAChB;IACA,WAAW;QACT,MAAM;QACN,OAAO;QACP,aAAa;QACb,cAAc;IAChB;IACA,SAAS;QACP,MAAM;QACN,OAAO;QACP,aAAa;QACb,cAAc;IAChB;IACA,UAAU;QACR,MAAM;QACN,OAAO;QACP,aAAa;QACb,cAAc;IAChB;AACF;AAGO,MAAM,aAAa;IACxB,MAAM;QACJ,OAAO;QACP,QAAQ;QACR,UAAU;QACV,SAAS;IACX;IACA,OAAO;QACL,SAAS;QACT,UAAU;IACZ;IACA,WAAW;QACT,OAAO;QACP,QAAQ;IACV;AACF;AAGO,MAAM,iBAAiB,CAAC;IAC7B,OAAO,OAAO,MAAM,CAAC,QAAQ,IAAI,CAAC,CAAC,QAAU,MAAM,IAAI,KAAK;AAC9D;AAEO,MAAM,kBAAkB;IAC7B,OAAO,OAAO,MAAM,CAAC,QAAQ,MAAM,CAAC,CAAC,QAAU,CAAC,MAAM,YAAY;AACpE;AAEO,MAAM,qBAAqB;IAChC,OAAO,OAAO,MAAM,CAAC,QAAQ,MAAM,CAAC,CAAC,QAAU,MAAM,YAAY;AACnE;AAEO,MAAM,eAAe;IAC1B,OAAO,OAAO,MAAM,CAAC;AACvB;AAGO,MAAM,uBAAuB;IAClC,OAAO;QACL,QAAQ;QACR,iBAAiB,IAAM;QACvB,oBAAoB,IAAM;QAC1B,cAAc,IAAM;QACpB,gBAAgB,CAAC,OAAiB,eAAe;IACnD;AACF"}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middleware.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport type { NextRequest } from 'next/server';\nimport { ROUTES } from '@/shared/config/routes';\n\n// Define protected routes that require authentication\nconst protectedRoutes = Object.values(ROUTES)\n  .filter(route => route.requiresAuth)\n  .map(route => route.path);\n\n// Define public routes that don't require authentication\nconst publicRoutes = Object.values(ROUTES)\n  .filter(route => !route.requiresAuth)\n  .map(route => route.path);\n\nexport function middleware(request: NextRequest) {\n  const { pathname } = request.nextUrl;\n  \n  // Check if the current path is a protected route\n  const isProtectedRoute = protectedRoutes.includes(pathname);\n  \n  // Get authentication status from cookies or headers\n  // You can customize this based on your auth implementation\n  const authToken = request.cookies.get('auth-token')?.value;\n  const isAuthenticated = !!authToken;\n  \n  // If trying to access protected route without authentication\n  if (isProtectedRoute && !isAuthenticated) {\n    // Redirect to home page (or login page if you prefer)\n    const redirectUrl = new URL(ROUTES.HOME.path, request.url);\n    \n    // Add a query parameter to show a message\n    redirectUrl.searchParams.set('message', 'Please sign in to access this page');\n    \n    return NextResponse.redirect(redirectUrl);\n  }\n  \n  // If authenticated user tries to access login/register pages, redirect to dashboard\n  if (isAuthenticated && (pathname === ROUTES.LOGIN.path || pathname === ROUTES.REGISTER.path)) {\n    const redirectUrl = new URL(ROUTES.DASHBOARD.path, request.url);\n    return NextResponse.redirect(redirectUrl);\n  }\n  \n  return NextResponse.next();\n}\n\nexport const config = {\n  matcher: [\n    /*\n     * Match all request paths except for the ones starting with:\n     * - api (API routes)\n     * - _next/static (static files)\n     * - _next/image (image optimization files)\n     * - favicon.ico (favicon file)\n     * - public files (public folder)\n     */\n    '/((?!api|_next/static|_next/image|favicon.ico|public).*)',\n  ],\n};\n"],"names":[],"mappings":";;;;AAAA;AAAA;AAEA;;;AAEA,sDAAsD;AACtD,MAAM,kBAAkB,OAAO,MAAM,CAAC,yIAAA,CAAA,SAAM,EACzC,MAAM,CAAC,CAAA,QAAS,MAAM,YAAY,EAClC,GAAG,CAAC,CAAA,QAAS,MAAM,IAAI;AAE1B,yDAAyD;AACzD,MAAM,eAAe,OAAO,MAAM,CAAC,yIAAA,CAAA,SAAM,EACtC,MAAM,CAAC,CAAA,QAAS,CAAC,MAAM,YAAY,EACnC,GAAG,CAAC,CAAA,QAAS,MAAM,IAAI;AAEnB,SAAS,WAAW,OAAoB;IAC7C,MAAM,EAAE,QAAQ,EAAE,GAAG,QAAQ,OAAO;IAEpC,iDAAiD;IACjD,MAAM,mBAAmB,gBAAgB,QAAQ,CAAC;IAElD,oDAAoD;IACpD,2DAA2D;IAC3D,MAAM,YAAY,QAAQ,OAAO,CAAC,GAAG,CAAC,eAAe;IACrD,MAAM,kBAAkB,CAAC,CAAC;IAE1B,6DAA6D;IAC7D,IAAI,oBAAoB,CAAC,iBAAiB;QACxC,sDAAsD;QACtD,MAAM,cAAc,IAAI,IAAI,yIAAA,CAAA,SAAM,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,GAAG;QAEzD,0CAA0C;QAC1C,YAAY,YAAY,CAAC,GAAG,CAAC,WAAW;QAExC,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC;IAC/B;IAEA,oFAAoF;IACpF,IAAI,mBAAmB,CAAC,aAAa,yIAAA,CAAA,SAAM,CAAC,KAAK,CAAC,IAAI,IAAI,aAAa,yIAAA,CAAA,SAAM,CAAC,QAAQ,CAAC,IAAI,GAAG;QAC5F,MAAM,cAAc,IAAI,IAAI,yIAAA,CAAA,SAAM,CAAC,SAAS,CAAC,IAAI,EAAE,QAAQ,GAAG;QAC9D,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC;IAC/B;IAEA,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAEO,MAAM,SAAS;IACpB,SAAS;QACP;;;;;;;KAOC,GACD;KACD;AACH"}}]
}